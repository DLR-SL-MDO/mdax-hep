{"identifier": "49e92af4-2f0b-4840-9173-30e15c71afea", "workflowVersion": "5.0", "name": "Hybrid-Electric Propulsion Design - OPT", "nodes": [{"identifier": "55d53866-e288-4ec0-bc3a-da514cc22c01", "name": "Optimizer", "location": "270:270", "zIndex": "1", "active": "true", "component": {"identifier": "de.rcenvironment.optimizer", "version": "8", "name": "Optimizer"}, "configuration": {"CustomDakotaPath": "false", "algorithm": "Dakota Coliny COBYLA (Constraint Optimization By Linear Approximations)", "dakotaExecPath": "${dakotaExecPath}", "methodConfigurations": "{\r\n  \"Pyranha Conjugate Gradient Based Strategy [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Conjugate Gradient Based Strategy\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of cycles\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"200\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"tolerance\" : {\r\n        \"GuiName\" : \"Stopping criteria tolerance\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0e-9\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"gradient\" : {\r\n        \"GuiName\" : \"Gradient\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"Adjoint,Finite Differences,Central Finite Differences\",\r\n        \"DefaultValue\" : \"Adjoint\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"signgrad\" : {\r\n        \"GuiName\" : \"Sign of gradient\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"positive,negative\",\r\n        \"DefaultValue\" : \"positive\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"dobj1\" : {\r\n        \"GuiName\" : \"Expected improvement at first step (in %)\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"maxstepls\" : {\r\n        \"GuiName\" : \"Maximum allowed step size during line search\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"minstepls\" : {\r\n        \"GuiName\" : \"Minimum allowed step size during line search\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"DefaultValue\" : \"2\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Dakota Surrogate-Based Local\" : {\r\n    \"methodName\" : \"Dakota Surrogate-Based Local\",\r\n    \"methodCode\" : \"surrogate_based_local\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"2\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"approx_method_pointer\" : {\r\n        \"doNotShow\" : \"true\",\r\n        \"dataType\" : \"String\",\r\n        \"DefaultValue\" : \"method2\",\r\n        \"Value\" : \"\"\r\n      },\r\n      \"dace_list\" : {\r\n        \"doNotShow\" : \"true\",\r\n        \"doNotWrite\" : \"true\",\r\n        \"dataType\" : \"String\",\r\n        \"DefaultValue\" : \"Dakota Latin Hypercube Sampling\",\r\n        \"Value\" : \"\"\r\n      },\r\n      \"approx_method_list\" : {\r\n        \"doNotShow\" : \"true\",\r\n        \"doNotWrite\" : \"true\",\r\n        \"dataType\" : \"String\",\r\n        \"DefaultValue\" : \"Dakota Coliny COBYLA (Constraint Optimization By Linear Approximations),Dakota Quasi-Newton method\",\r\n        \"Value\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : {\r\n      \"gradients\" : {\r\n        \"GuiName\" : \"Use gradients\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"no_gradients,numerical_gradients\",\r\n        \"DefaultValue\" : \"no_gradients\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"noKeyword\" : \"true\"\r\n      },\r\n      \"interval_type\" : {\r\n        \"GuiName\" : \"Gradient interval type\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"forward,central\",\r\n        \"DefaultValue\" : \"forward\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"fd_gradient_step_size\" : {\r\n        \"GuiName\" : \"Gradient stepsize\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"hessians\" : {\r\n        \"GuiName\" : \"Use hessians\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"no_hessians\",\r\n        \"DefaultValue\" : \"no_hessians\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"noKeyword\" : \"true\"\r\n      }\r\n    },\r\n    \"configMap\" : null\r\n  },\r\n  \"Pyranha LHS DOE method [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha LHS DOE method\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of sampling points\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"10\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Dakota HOPSPACK Asynch Pattern Search\" : {\r\n    \"methodName\" : \"Dakota HOPSPACK Asynch Pattern Search\",\r\n    \"methodCode\" : \"asynch_pattern_search\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"initial_delta\" : {\r\n        \"GuiName\" : \"Initial offset value\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"threshold_delta\" : {\r\n        \"GuiName\" : \"Threshold for offset values\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.01\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"contraction_factor\" : {\r\n        \"GuiName\" : \"Pattern contraction factor\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"solution_target\" : {\r\n        \"GuiName\" : \"Solution target\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"optional\"\r\n      },\r\n      \"synchronization\" : {\r\n        \"GuiName\" : \"Evaluation synchronization\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"blocking,nonblocking\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"nonblocking\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"merit_function\" : {\r\n        \"GuiName\" : \"Merit function\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"merit_max,merit_max_smooth,merit1,merit1_smooth,merit2,merit2_smooth,merit2_squared\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"merit2_squared\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_penalty\" : {\r\n        \"GuiName\" : \"Constraint penalty\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"smoothing_factor\" : {\r\n        \"GuiName\" : \"Smoothing factor\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Pyranha Evolutionary Strategy [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Evolutionary Strategy\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of generations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"10\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"popsize\" : {\r\n        \"GuiName\" : \"Size of population\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"10\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"strategy\" : {\r\n        \"GuiName\" : \"Strategy (2. is modified Version)\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Choices\" : \"1,2\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"rndini\" : {\r\n        \"GuiName\" : \"Random generator initiatior\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"pc\" : {\r\n        \"GuiName\" : \"Probability of crossover\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.7\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"f\" : {\r\n        \"GuiName\" : \"Scaling factor\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.9\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Pyranha Steepest Descent Gradient Based Strategy [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Steepest Descent Gradient Based Strategy\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of cycles\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"200\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"tolerance\" : {\r\n        \"GuiName\" : \"Stopping criteria tolerance\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0e-9\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"gradient\" : {\r\n        \"GuiName\" : \"Gradient\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"Adjoint,Finite Differences,Central Finite Differences\",\r\n        \"DefaultValue\" : \"Adjoint\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"signgrad\" : {\r\n        \"GuiName\" : \"Sign of gradient\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"positive,negative\",\r\n        \"DefaultValue\" : \"positive\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"dobj1\" : {\r\n        \"GuiName\" : \"Expected improvement at first step (in %)\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"maxstepls\" : {\r\n        \"GuiName\" : \"Maximum allowed step size during line search\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"minstepls\" : {\r\n        \"GuiName\" : \"Minimum allowed step size during line search\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"DefaultValue\" : \"3\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Dakota Coliny Evolutionary Algorithm\" : {\r\n    \"methodName\" : \"Dakota Coliny Evolutionary Algorithm\",\r\n    \"methodCode\" : \"coliny_ea\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"seed\" : {\r\n        \"GuiName\" : \"Random seed\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"population_size\" : {\r\n        \"GuiName\" : \"Number of population members\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"50\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"initialization_type\" : {\r\n        \"GuiName\" : \"Initialization type\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"simple_random,unique_random\",\r\n        \"DefaultValue\" : \"unique_random\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"fitness_type\" : {\r\n        \"GuiName\" : \"Fitness type\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"linear_rank,merit_function\",\r\n        \"DefaultValue\" : \"linear_rank\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"replacement_type\" : {\r\n        \"GuiName\" : \"Replacement type\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"random,chc,elitist\",\r\n        \"DefaultValue\" : \"elitist\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"NoLinebreak\" : \"true\"\r\n      },\r\n      \"replacement_type_value\" : {\r\n        \"GuiName\" : \"Replacement size\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"NoKeyword\" : \"true\"\r\n      },\r\n      \"new_solutions_generated\" : {\r\n        \"GuiName\" : \"New solutions generated\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"50\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"crossover_type\" : {\r\n        \"GuiName\" : \"Crossover type\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"two_point,blend,uniform\",\r\n        \"DefaultValue\" : \"two_point\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"crossover_rate\" : {\r\n        \"GuiName\" : \"Crossover rate\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.8\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_type\" : {\r\n        \"GuiName\" : \"Mutation type\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"replace_uniform,offset_normal,offset_cauchy,offset_uniform\",\r\n        \"DefaultValue\" : \"offset_normal\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_scale\" : {\r\n        \"GuiName\" : \"Mutation scale\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_range\" : {\r\n        \"GuiName\" : \"Mutation range\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_rate\" : {\r\n        \"GuiName\" : \"Mutation rate\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"non_adaptive\" : {\r\n        \"GuiName\" : \"Non-adaptive mutation flag\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"solution_accuracy\" : {\r\n        \"GuiName\" : \"Solution accuracy\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"required\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Dakota Coliny COBYLA (Constraint Optimization By Linear Approximations)\" : {\r\n    \"methodName\" : \"Dakota Coliny COBYLA (Constraint Optimization By Linear Approximations)\",\r\n    \"methodCode\" : \"coliny_cobyla\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"initial_delta\" : {\r\n        \"GuiName\" : \"Initial trust region\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"required\"\r\n      },\r\n      \"threshold_delta\" : {\r\n        \"GuiName\" : \"Minimal trust region (stopping criterion)\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"required\"\r\n      },\r\n      \"solution_accuracy\" : {\r\n        \"GuiName\" : \"Solution accuracy\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"required\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Dakota Quasi-Newton method\" : {\r\n    \"methodName\" : \"Dakota Quasi-Newton method\",\r\n    \"methodCode\" : \"optpp_q_newton\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"search_method\" : {\r\n        \"GuiName\" : \"Search method\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"value_based_line_search,gradient_based_line_search,trust_region,tr_pds\",\r\n        \"DefaultValue\" : \"trust_region\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"IsGroup\" : \"true\"\r\n      },\r\n      \"max_step\" : {\r\n        \"GuiName\" : \"Maximum step size\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"gradient_tolerance\" : {\r\n        \"GuiName\" : \"Gradient tolerance\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"merit_function\" : {\r\n        \"GuiName\" : \"Merit function\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"el_bakry,argaez_tapia,van_shanno\",\r\n        \"DefaultValue\" : \"argaez_tapia\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"steplength_to_boundary\" : {\r\n        \"GuiName\" : \"Steplengh to boundary\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.99995\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"centering_parameter\" : {\r\n        \"GuiName\" : \"Centering parameter\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"0.1\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : {\r\n      \"gradients\" : {\r\n        \"GuiName\" : \"Use gradients\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"numerical_gradients,analytic_gradients\",\r\n        \"DefaultValue\" : \"numerical_gradients\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"noKeyword\" : \"true\"\r\n      },\r\n      \"interval_type\" : {\r\n        \"GuiName\" : \"Gradient interval type\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"forward,central\",\r\n        \"DefaultValue\" : \"forward\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"fd_gradient_step_size\" : {\r\n        \"GuiName\" : \"Gradient stepsize\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"hessians\" : {\r\n        \"GuiName\" : \"Use hessians\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"no_hessians,numerical_hessians\",\r\n        \"DefaultValue\" : \"no_hessians\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"noKeyword\" : \"true\"\r\n      },\r\n      \"interval_type_hessian\" : {\r\n        \"GuiName\" : \"Hessian interval type\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"forward,central\",\r\n        \"DefaultValue\" : \"forward\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"noKeyword\" : \"true\"\r\n      },\r\n      \"fd_hessian_step_size\" : {\r\n        \"GuiName\" : \"Hessian stepsize\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      }\r\n    },\r\n    \"configMap\" : null\r\n  },\r\n  \"Dakota NOMAD (Mesh Adaptive Direct Search Algorithm)\" : {\r\n    \"methodName\" : \"Dakota NOMAD (Mesh Adaptive Direct Search Algorithm)\",\r\n    \"methodCode\" : \"mesh_adaptive_search\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"function_precision\" : {\r\n        \"GuiName\" : \"Maximum precision of responses\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"seed\" : {\r\n        \"GuiName\" : \"Seed\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"variable_neighborhood_search\" : {\r\n        \"GuiName\" : \"Neighborhood search\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"A Test Method [example's method]\" : {\r\n    \"methodName\" : \"A Test Method\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"initial_delta\" : {\r\n        \"GuiName\" : \"Initial trust region\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"required\"\r\n      },\r\n      \"threshold_delta\" : {\r\n        \"GuiName\" : \"Minimal trust region (stopping criterion)\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"required\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"example\"\r\n    }\r\n  },\r\n  \"Dakota Latin Hypercube Sampling\" : {\r\n    \"methodName\" : \"Dakota Latin Hypercube Sampling\",\r\n    \"methodCode\" : \"dace lhs\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"seed\" : {\r\n        \"GuiName\" : \"Seed\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"fixed_seed\" : {\r\n        \"GuiName\" : \"Fixed seed flag\",\r\n        \"dataType\" : \"bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"false\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"samples\" : {\r\n        \"GuiName\" : \"Number of samples\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"10\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"symbols\" : {\r\n        \"GuiName\" : \"Number of symbols\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"main_effects\" : {\r\n        \"GuiName\" : \"Main effects\",\r\n        \"dataType\" : \"bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"quality_metrics\" : {\r\n        \"GuiName\" : \"Quality metrics\",\r\n        \"dataType\" : \"bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"variance_based_decomp\" : {\r\n        \"GuiName\" : \"Varianve based decomposition\",\r\n        \"dataType\" : \"bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Pyranha Variable Metric Method [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Variable Metric Method\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of cycles\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"200\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"tolerance\" : {\r\n        \"GuiName\" : \"Stopping criteria tolerance\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0e-9\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"gradient\" : {\r\n        \"GuiName\" : \"Gradient\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"Adjoint,Finite Differences,Central Finite Differences\",\r\n        \"DefaultValue\" : \"Adjoint\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"signgrad\" : {\r\n        \"GuiName\" : \"Sign of gradient\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"positive,negative\",\r\n        \"DefaultValue\" : \"positive\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"dobj1\" : {\r\n        \"GuiName\" : \"Expected improvement at first step (in %)\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"maxstepls\" : {\r\n        \"GuiName\" : \"Maximum allowed step size during line search\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"minstepls\" : {\r\n        \"GuiName\" : \"Minimum allowed step size during line search\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"update\" : {\r\n        \"GuiName\" : \"Update of the Hessian\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"BFGS,DFP,JDLEE\",\r\n        \"DefaultValue\" : \"BFGS\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Dakota Efficient Global Optimization\" : {\r\n    \"methodName\" : \"Dakota Efficient Global Optimization\",\r\n    \"methodCode\" : \"efficient_global\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"seed\" : {\r\n        \"GuiName\" : \"Random seed\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"gaussian_process\" : {\r\n        \"GuiName\" : \"Gaussian Process surrogate model\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"surfpack,dakota\",\r\n        \"DefaultValue\" : \"surfpack\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Dakota Multi Objective Genetic Algorithm\" : {\r\n    \"methodName\" : \"Dakota Multi Objectiv Genetic Algorithm\",\r\n    \"methodCode\" : \"moga\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"fitness_type\" : {\r\n        \"GuiName\" : \"Fitness type\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"layer_rank,domination_count\",\r\n        \"DefaultValue\" : \"domination_count\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"seed\" : {\r\n        \"GuiName\" : \"Random seed\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"population_size\" : {\r\n        \"GuiName\" : \"Number of population members\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"50\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"initialization_type\" : {\r\n        \"GuiName\" : \"Initialization type\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"simple_random,unique_random\",\r\n        \"DefaultValue\" : \"unique_random\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_type\" : {\r\n        \"GuiName\" : \"Mutation type\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"replace_uniform,bit_random,offset_normal,offset_cauchy,offset_uniform\",\r\n        \"DefaultValue\" : \"replace_uniform\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_rate\" : {\r\n        \"GuiName\" : \"Mutation rate\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.08\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"replacement_type\" : {\r\n        \"GuiName\" : \"Replacement type\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"roulette_wheel,unique_roulette_wheel,elitist\",\r\n        \"DefaultValue\" : \"elitist\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"crossover_type\" : {\r\n        \"GuiName\" : \"Crossover type\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"multi_point_binary,multi_point_parameterized_binary,multi_point_real\",\r\n        \"DefaultValue\" : \"multi_point_real\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"NoLinebreak\" : \"true\"\r\n      },\r\n      \"crossover_type_value\" : {\r\n        \"GuiName\" : \"Crossover type value\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"50\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"NoKeyword\" : \"true\"\r\n      },\r\n      \"crossover_rate\" : {\r\n        \"GuiName\" : \"Crossover rate\",\r\n        \"GuiOrder\" : \"10\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"0.8\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Pyranha Subplex Strategy [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Subplex Strategy\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of cycles\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"20\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"tolerance\" : {\r\n        \"GuiName\" : \"Stopping criteria tolerance\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0e-9\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"norm\" : {\r\n        \"GuiName\" : \"Normalized variables\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"kr\" : {\r\n        \"GuiName\" : \"Reflection\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"ke\" : {\r\n        \"GuiName\" : \"Extension\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"2\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"kc\" : {\r\n        \"GuiName\" : \"Contractions\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"ks\" : {\r\n        \"GuiName\" : \"Shrinkage\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"kt\" : {\r\n        \"GuiName\" : \"Reduction coefficient\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.25\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"omega\" : {\r\n        \"GuiName\" : \"Step reduction coefficient for next subplex search\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"nsmin\" : {\r\n        \"GuiName\" : \"Minimum subspace dimension\",\r\n        \"GuiOrder\" : \"10\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"3\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"nsmax\" : {\r\n        \"GuiName\" : \"Maximum subspace dimension\",\r\n        \"GuiOrder\" : \"11\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"6\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"scale\" : {\r\n        \"GuiName\" : \"Initial simplex size (in % of range)\",\r\n        \"GuiOrder\" : \"12\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0,<1\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"13\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Dakota Single Objective Genetic Algorithm\" : {\r\n    \"methodName\" : \"Dakota Single Objectiv Genetic Algorithm\",\r\n    \"methodCode\" : \"soga\",\r\n    \"optimizerPackage\" : \"dakota\",\r\n    \"followingMethods\" : \"0\",\r\n    \"commonSettings\" : {\r\n      \"convergence_tolerance\" : {\r\n        \"GuiName\" : \"Convergence tolerance\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_iterations\" : {\r\n        \"GuiName\" : \"Maximum iterations\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"100\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"speculative\" : {\r\n        \"GuiName\" : \"Speculative gradients and Hessians\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"constraint_tolerance\" : {\r\n        \"GuiName\" : \"Constraint tolerance\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1E-4\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"max_function_evaluations\" : {\r\n        \"GuiName\" : \"Maximum function evaluations\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1000\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"output\" : {\r\n        \"GuiName\" : \"Output verbosity\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"debug,quiet,normal,silent,verbose\",\r\n        \"Value\" : \"\",\r\n        \"DefaultValue\" : \"normal\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"final_solutions\" : {\r\n        \"GuiName\" : \"Final solutions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"scaling\" : {\r\n        \"GuiName\" : \"Scaling flag\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Bool\",\r\n        \"SWTWidget\" : \"Check\",\r\n        \"DefaultValue\" : \"false\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"specificSettings\" : {\r\n      \"fitness_type\" : {\r\n        \"GuiName\" : \"Fitness type\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"merit_function\",\r\n        \"DefaultValue\" : \"merit_function\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"seed\" : {\r\n        \"GuiName\" : \"Random seed\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"population_size\" : {\r\n        \"GuiName\" : \"Number of population members\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"50\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"initialization_type\" : {\r\n        \"GuiName\" : \"Initialization type\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"simple_random,unique_random\",\r\n        \"DefaultValue\" : \"unique_random\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_type\" : {\r\n        \"GuiName\" : \"Mutation type\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"bit_random,replace_uniform,bit_random,offset_normal,offset_cauchy,offset_uniform\",\r\n        \"DefaultValue\" : \"replace_uniform\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"mutation_rate\" : {\r\n        \"GuiName\" : \"Mutation rate\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.08\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"replacement_type\" : {\r\n        \"GuiName\" : \"Replacement type\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"favor_feasible,roulette_wheel,unique_roulette_wheel,elitist\",\r\n        \"DefaultValue\" : \"elitist\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"crossover_type\" : {\r\n        \"GuiName\" : \"Crossover type\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"None\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"multi_point_binary,multi_point_parameterized_binary,multi_point_real\",\r\n        \"DefaultValue\" : \"multi_point_real\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"NoLinebreak\" : \"true\"\r\n      },\r\n      \"crossover_type_value\" : {\r\n        \"GuiName\" : \"Crossover type value\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"Int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"50\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\",\r\n        \"NoKeyword\" : \"true\"\r\n      },\r\n      \"crossover_rate\" : {\r\n        \"GuiName\" : \"Crossover rate\",\r\n        \"GuiOrder\" : \"10\",\r\n        \"dataType\" : \"Real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.8\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : null\r\n  },\r\n  \"Pyranha Simplex Strategy [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Simplex Strategy\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Number of cycles\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"200\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">0\"\r\n      },\r\n      \"tolerance\" : {\r\n        \"GuiName\" : \"Stopping criteria tolerance\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1.0e-9\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \">=0\"\r\n      },\r\n      \"kt\" : {\r\n        \"GuiName\" : \"Reduction coefficient\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.25\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"norm\" : {\r\n        \"GuiName\" : \"Normalize variables\",\r\n        \"GuiOrder\" : \"4\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"0,1\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"kr\" : {\r\n        \"GuiName\" : \"Reflection\",\r\n        \"GuiOrder\" : \"5\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"ke\" : {\r\n        \"GuiName\" : \"Extension\",\r\n        \"GuiOrder\" : \"6\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"2\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"kc\" : {\r\n        \"GuiName\" : \"Contractions\",\r\n        \"GuiOrder\" : \"7\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"ks\" : {\r\n        \"GuiName\" : \"Shrinkage\",\r\n        \"GuiOrder\" : \"8\",\r\n        \"dataType\" : \"real\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"0.5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"9\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"DefaultValue\" : \"1\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  },\r\n  \"Pyranha DOE Scanner method [Pyranha's method]\" : {\r\n    \"methodName\" : \"Pyranha Scanner DOE method\",\r\n    \"methodCode\" : null,\r\n    \"optimizerPackage\" : \"generic\",\r\n    \"followingMethods\" : null,\r\n    \"commonSettings\" : { },\r\n    \"specificSettings\" : {\r\n      \"stepsize\" : {\r\n        \"GuiName\" : \"Stepsize\",\r\n        \"GuiOrder\" : \"1\",\r\n        \"dataType\" : \"String\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"step,cycle\",\r\n        \"DefaultValue\" : \"step\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"monitor\" : {\r\n        \"GuiName\" : \"Output level\",\r\n        \"GuiOrder\" : \"3\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Combo\",\r\n        \"Choices\" : \"1,2,3\",\r\n        \"DefaultValue\" : \"3\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      },\r\n      \"maxcycle\" : {\r\n        \"GuiName\" : \"Maxcycle in each direction\",\r\n        \"GuiOrder\" : \"2\",\r\n        \"dataType\" : \"int\",\r\n        \"SWTWidget\" : \"Text\",\r\n        \"DefaultValue\" : \"5\",\r\n        \"Value\" : \"\",\r\n        \"Validation\" : \"\"\r\n      }\r\n    },\r\n    \"responsesSettings\" : null,\r\n    \"configMap\" : {\r\n      \"genericFolder\" : \"Pyranha\"\r\n    }\r\n  }\r\n}", "optimizerPackageCode": "dakota", "preCalcFilePath": "", "storeComponentHistoryData": "true", "usePrecalculation": "false"}, "staticOutputs": [{"identifier": "23cc7482-52f0-4271-8c93-587cc31b0020", "name": "Done", "datatype": "Boolean"}, {"identifier": "e80347e4-a076-4a5b-9690-4d93398ab4c5", "name": "Gradient request", "datatype": "Boolean"}, {"identifier": "32a81666-ae00-4781-bc85-7b491817e51b", "name": "Iteration", "datatype": "Integer"}], "dynamicInputs": [{"identifier": "f599b780-9ec3-46d1-a548-f3e6f72e84fb", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Outputs/MissionFuel", "epIdentifier": "Objective", "group": "valuesToOptimize", "datatype": "Float", "metadata": {"goal": "Minimize", "hasGradient": "false", "vectorSize": "", "weight": "1"}}, {"identifier": "49aad90c-c34f-4736-8a42-c87148170d8e", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise - start value", "epIdentifier": "startvalues", "group": "startValues", "datatype": "Float", "metadata": {"inputExecutionConstraint_4aae3eea": "Required"}}, {"identifier": "bff96bf0-1d34-4016-8c41-08edd32ac02f", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines - start value", "epIdentifier": "startvalues", "group": "startValues", "datatype": "Float", "metadata": {"inputExecutionConstraint_4aae3eea": "Required"}}, {"identifier": "80e8f300-592a-4256-b0de-56585374a484", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL - start value", "epIdentifier": "startvalues", "group": "startValues", "datatype": "Float", "metadata": {"inputExecutionConstraint_4aae3eea": "Required"}}, {"identifier": "36969676-58f8-418e-8310-03995c26df01", "name": "XML", "epIdentifier": "toForward", "group": "valuesToOptimize", "datatype": "FileReference"}, {"identifier": "94e0a4d1-dc0a-4c80-a40d-9135f5815c3d", "name": "XML_start", "epIdentifier": "startToForward", "group": "startValues", "datatype": "FileReference"}], "dynamicOutputs": [{"identifier": "ca6e1fb2-b2c0-4933-a5c7-6b698dc8f3d9", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise", "epIdentifier": "Design", "datatype": "Float", "metadata": {"hasSingleBounds": "false", "hasStartValue": "false", "isDiscrete": "false", "lower": "", "startValue": "", "step": "1", "upper": "", "useStep": "false", "useUnifiedStep": "true", "vectorSize": "true"}}, {"identifier": "27c5f184-7fe2-4bb1-a171-6aa9255df49d", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise_optimal", "epIdentifier": "Design", "datatype": "Float", "metadata": {"hasStartValue": "false", "lower": "", "startValue": "", "upper": ""}}, {"identifier": "fe8f408f-cc8c-4331-80f4-05ec4f865258", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines", "epIdentifier": "Design", "datatype": "Float", "metadata": {"hasSingleBounds": "false", "hasStartValue": "false", "isDiscrete": "false", "lower": "", "startValue": "", "step": "1", "upper": "", "useStep": "false", "useUnifiedStep": "true", "vectorSize": "true"}}, {"identifier": "07236b61-d038-4d72-883e-77b61a71c1f5", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines_optimal", "epIdentifier": "Design", "datatype": "Float", "metadata": {"hasStartValue": "false", "lower": "", "startValue": "", "upper": ""}}, {"identifier": "1d657c3c-0b2f-44b7-8aaa-06a669744d38", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL", "epIdentifier": "Design", "datatype": "Float", "metadata": {"hasSingleBounds": "false", "hasStartValue": "false", "isDiscrete": "false", "lower": "", "startValue": "", "step": "1", "upper": "", "useStep": "false", "useUnifiedStep": "true", "vectorSize": "true"}}, {"identifier": "c8008c66-4924-4822-be7e-9b1ce1a678b5", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL_optimal", "epIdentifier": "Design", "datatype": "Float", "metadata": {"hasStartValue": "false", "lower": "", "startValue": "", "upper": ""}}, {"identifier": "11817c0c-c117-4729-b5e8-6d64aab8614e", "name": "XML", "epIdentifier": "toForward", "datatype": "FileReference"}, {"identifier": "4397667c-7ccf-4ff2-9946-a8b5bb827801", "name": "XML_optimal", "epIdentifier": "finalToForward", "datatype": "FileReference"}]}, {"identifier": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "name": "MDA", "location": "490:490", "zIndex": "2", "active": "true", "component": {"identifier": "de.rcenvironment.converger", "version": "6", "name": "Converger"}, "configuration": {"epsA": "1e-02", "epsR": "1e-02", "failLoopOnly-NAV_5e0ed1cd": "true", "isNestedLoop_5e0ed1cd": "true", "iterationsToConsider": "1", "maxConvChecks": "100", "maxRerunBeforeFail-NAV_5e0ed1cd": "1", "notConvFail": "false", "notConvIgnore": "true", "notConvNotAValue": "false", "storeComponentHistoryData": "true"}, "staticOutputs": [{"identifier": "58e4bdaf-5292-49b9-80bb-00e96d91c2ae", "name": "Converged", "datatype": "Boolean"}, {"identifier": "eaf0372e-5117-45ab-856c-577a289c3519", "name": "Converged absolute", "datatype": "Boolean"}, {"identifier": "feb8bc93-fd08-43d1-a384-df57c2ac04a9", "name": "Converged relative", "datatype": "Boolean"}, {"identifier": "f018b5e0-cd36-4897-8be4-7f1b839fbf13", "name": "Done", "datatype": "Boolean"}], "dynamicInputs": [{"identifier": "8d63a9b9-30f0-4209-b160-af50f77bdb2e", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass", "epIdentifier": "valueToConverge", "group": "valuesToConverge", "datatype": "Float", "metadata": {"hasStartValue": "false", "startValue": ""}}, {"identifier": "f8c531cd-b437-4a22-98f9-869372d060b8", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass_start", "epIdentifier": "startToConverge", "group": "startValues", "datatype": "Float", "metadata": {"inputExecutionConstraint_4aae3eea": "Required"}}, {"identifier": "60580c6b-2683-4130-8b2b-adaf64fe6176", "name": "XML", "epIdentifier": "toForward", "group": "valuesToConverge", "datatype": "FileReference"}, {"identifier": "b323fa3d-c691-4d2d-9ad4-4f1d88fd8e25", "name": "XML_start", "epIdentifier": "startToForward", "group": "startValues", "datatype": "FileReference"}], "dynamicOutputs": [{"identifier": "62ba941a-5b87-4420-bdab-42160b127a7c", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass", "epIdentifier": "valueToConverge", "datatype": "Float"}, {"identifier": "0e3d2f81-fd19-4438-a3d4-8ad8109700b6", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass_converged", "epIdentifier": "finalToConverge", "datatype": "Float"}, {"identifier": "72567ac9-36e5-4eba-a5fb-b6b2459c1aa1", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass_is_converged", "epIdentifier": "auxiliaryValue", "datatype": "Boolean"}, {"identifier": "85ddea4b-079e-4981-a9f7-ecd2d2d32016", "name": "XML", "epIdentifier": "toForward", "datatype": "FileReference"}, {"identifier": "54e8bf31-86ae-4e7a-9ab3-929055f0db65", "name": "XML_converged", "epIdentifier": "finalToForward", "datatype": "FileReference"}]}, {"identifier": "5407401c-31f8-42f1-925b-21e015885d2c", "name": "PerformanceBlock", "location": "710:710", "zIndex": "3", "active": "true", "component": {"identifier": "de.rcenvironment.integration.cpacs.PerformanceBlock", "version": "0.2", "name": "PerformanceBlock"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "f95e047f-6867-49ca-8329-4b6f0342aa9c", "name": "CPACS initial", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "463e35da-215e-48bb-a3f5-9633c874db6e", "name": "CPACS out", "datatype": "FileReference"}]}, {"identifier": "88f91b08-fcda-447f-87b7-3dbd48f82156", "name": "EngineBlock", "location": "1010:990", "zIndex": "4", "active": "true", "component": {"identifier": "de.rcenvironment.integration.cpacs.EngineBlock", "version": "0.2", "name": "EngineBlock"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "2e578cda-7f13-450e-af4a-0039beca0461", "name": "CPACS initial", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "69810e37-d567-45ee-b71d-36e0ab3523d6", "name": "CPACS out", "datatype": "FileReference"}]}, {"identifier": "2c02ea5e-7d2c-4145-99fd-142f9db92a78", "name": "HybridSystemBlock", "location": "1310:1270", "zIndex": "5", "active": "true", "component": {"identifier": "de.rcenvironment.integration.cpacs.HybridSystemBlock", "version": "0.2", "name": "HybridSystemBlock"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "ad90d2f8-6f69-4c45-a961-ce934c453f25", "name": "CPACS initial", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "01980003-1854-47f8-aa6a-032b7018ae8c", "name": "CPACS out", "datatype": "FileReference"}]}, {"identifier": "4bcd0d77-95d7-45a7-833e-4d14c9e9b14d", "name": "MissionBlock", "location": "1610:1550", "zIndex": "6", "active": "true", "component": {"identifier": "de.rcenvironment.integration.cpacs.MissionBlock", "version": "0.2", "name": "MissionBlock"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "88247aa4-594f-4f69-afe2-3c450050866c", "name": "CPACS initial", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "59eb68f6-0300-481d-bd0d-a950b9487f9e", "name": "CPACS out", "datatype": "FileReference"}]}, {"identifier": "26d43087-1d6b-4846-92c2-c4b89da51d61", "name": "MassesBlock", "location": "1910:1830", "zIndex": "7", "active": "true", "component": {"identifier": "de.rcenvironment.integration.cpacs.MassesBlock", "version": "0.1", "name": "MassesBlock"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "122c0f7b-9485-4753-ac5d-23d1a10e043a", "name": "CPACS initial", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "4993d52d-5a44-4282-a278-4594014e53ba", "name": "CPACS out", "datatype": "FileReference"}]}, {"identifier": "b55b7d15-961e-4810-b80b-69b72cabf509", "name": "Optimizer_input_values", "location": "290:215", "zIndex": "8", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "c9b224d9-3147-4727-9611-f226ebdf6b79", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "3ae35daf-e537-47f4-b868-19dd27396b07", "name": "XML", "datatype": "FileReference"}], "dynamicOutputs": [{"identifier": "b2908a9e-0d04-47c1-8115-44658b25c423", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise"}}, {"identifier": "6e7b6952-c4b7-44b5-9f87-5fb756c62e1b", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines"}}, {"identifier": "e4b4901e-af9b-4885-8d54-d8c79a8debe8", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL"}}]}, {"identifier": "f1e2ff75-a53f-4ba5-a691-a0c5ff6fddbc", "name": "Optimizer_loop_input_values", "location": "290:365", "zIndex": "9", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "deb85096-3a02-4c97-a524-834bf694e9f2", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "4f504384-f15e-4e6c-b6d7-3790a51aebd3", "name": "XML", "datatype": "FileReference"}], "dynamicOutputs": [{"identifier": "2c955e37-967b-458e-95f0-31bf5dcf2eaa", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Outputs/MissionFuel", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedMissionModel/Outputs/MissionFuel"}}]}, {"identifier": "fb60ac34-4b01-4e89-ab11-aff444ebdeb0", "name": "Optimizer_loop_output_values", "location": "365:330", "zIndex": "10", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "bba08d56-8d9a-4105-8d37-4f1952f94057", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "d77b9759-0718-43c3-a5f7-022b54768bcf", "name": "XML", "datatype": "FileReference"}], "dynamicInputs": [{"identifier": "35f39130-ceab-49f4-8190-9cc4dff36bba", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise"}}, {"identifier": "db1f2ec8-50eb-4dec-aed0-5ee93d74d531", "name": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines"}}, {"identifier": "85ce33f2-8cfd-4e82-9aae-6d10776cc88e", "name": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/TOFL"}}]}, {"identifier": "c3da5267-bf98-46b1-ab07-660c35b2619a", "name": "MDA_input_values", "location": "510:435", "zIndex": "11", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "3e0261f2-1a71-427d-9da3-78011cc62d37", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "6da911a2-4fb5-48f6-9eb8-c325e6885e74", "name": "XML", "datatype": "FileReference"}], "dynamicOutputs": [{"identifier": "795998d0-8f65-4d0b-a8a9-ca65285d13d5", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass"}}]}, {"identifier": "96a2c156-b4ca-420b-be5f-d71e84846fdc", "name": "MDA_loop_input_values", "location": "510:585", "zIndex": "12", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "3349e1b8-54a5-4f85-92e7-da509b0bcbb2", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "1c1d12ec-8b29-4eff-b5e1-791d91be8005", "name": "XML", "datatype": "FileReference"}], "dynamicOutputs": [{"identifier": "3546cf51-49c7-44a1-bb4d-782c5d6cc6e5", "name": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass", "epIdentifier": "default", "datatype": "Float", "metadata": {"variable.xpath": "/cpacs/vehicles/aircraft/model[@uID=\"model\"]/analyses/massBreakdown/designMasses/mTOM/mass"}}]}, {"identifier": "309f2a73-ee6f-4cbd-8fc0-04a192fd3084", "name": "PerformanceBlock_input_filter", "location": "730:655", "zIndex": "13", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/aeroPerformanceMap |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/designMasses |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/reference\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/aeroPerformanceMap |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/designMasses |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/reference\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "2a028fbe-be0a-4964-8f16-5ae9b89fb7a3", "name": "XML", "datatype": "FileReference"}, {"identifier": "0845f5aa-c6f8-4f3a-a510-a50808186bae", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "59b63671-268a-48df-8251-291149afba34", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "1b05b60c-3e9b-4642-b389-75ab9c36b312", "name": "PerformanceBlock_output_filter", "location": "805:730", "zIndex": "14", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis/thrust00\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis/thrust00\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "2f7aeee0-ee2e-4dd5-b4ab-a079595d714b", "name": "XML", "datatype": "FileReference"}, {"identifier": "d024a5f1-b1cb-4b23-b1be-3c765ef96ffd", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "a699f5b5-9a58-46e1-a4c5-cb855a7d4e84", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "2847ccab-6410-4549-8636-26e8ff457953", "name": "PerformanceBlock_splitter", "location": "785:655", "zIndex": "15", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "e0300fe0-012d-43ce-8ca3-b0cbf8cead00", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "364ec926-f4f1-4d43-bbac-a3ff9fe64777", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "231f6313-24d5-48e3-a006-7afc415b3ab7", "name": "PerformanceBlock_output_complement_filter", "location": "840:655", "zIndex": "16", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles/aircraft |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis/bpr00 |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/geometry\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles/aircraft |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis/bpr00 |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/geometry\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "424f878e-acaf-41e5-93fe-020a351504fc", "name": "XML", "datatype": "FileReference"}, {"identifier": "345de49a-2184-439d-ae3a-e0dff8ea4408", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "59ca3743-65e9-4638-8e99-7d93518fd977", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "09f3cb26-f34a-4be8-be43-43b727acd0d4", "name": "PerformanceBlock_merge_script", "location": "820:805", "zIndex": "17", "active": "true", "component": {"identifier": "de.rcenvironment.script", "version": "3.4", "name": "Script"}, "configuration": {"pythonExecutionPath": "${pythonExecutionPath}", "script": "# This script is converted to a string and used in a \"script\" component in RCE. It is compiled with Jython.\n\n# The script merges the `base` and `merge` files. Equal elements from the `merge` file have precedence.\n# More than one `merge` files are possible (must be appropriately modeled in the workflow).\n# Equal Elements from latter files take precedence.\n# Equality between elements is determined according to their ancestry, tag and attributes.\n# If element does not have attributes, its position as child node is taken as attribute.\n\n# Code is adapted from https://stackoverflow.com/a/29896847\n\nimport os\nimport xml\nimport time\nimport random\nfrom uuid import uuid4\nfrom xml.etree import ElementTree as et\n\n\ndef merge_files():\n    # f_base in first pos\n    base_path, merge_path = RCE.read_input(\"XML\"), RCE.read_input(\"XML to integrate\")\n\n    # rename input files, otherwise RCE will not update input files in subsequent script executions\n    base_path_renamed = random_rename(base_path)\n    os.rename(base_path, base_path_renamed)\n    merge_path_renamed = random_rename(merge_path)\n    os.rename(merge_path, merge_path_renamed)\n\n    merged_tree = XMLCombiner([base_path_renamed, merge_path_renamed]).combine()\n\n    # write output tree to file and output variable\n    output_path = random_rename(base_path, same_path=False)\n    f_base = open(output_path, \"wb\")\n    merged_tree.write(f_base, encoding=\"utf-8\")\n    f_base.close()\n    RCE.write_output(\"XML\", output_path)\n\n\ndef random_rename(file_path, same_path=True):\n    file_name, file_ext = os.path.splitext(file_path)\n    renamed_file = file_name + \"_renamed_\" + str(int(time.time() * 1000)) + \"_\" + str(\n        int(random.randint(0, 1000000))) + file_ext\n    if not same_path:\n        return renamed_file\n    return os.path.join(os.path.dirname(file_path), renamed_file)\n\n\nclass hashabledict(dict):\n\n    def __hash__(self):\n        return hash(tuple(sorted(self.items())))\n\n\nclass XMLIndexTracker(object):\n    \"\"\"Tracks the index of similar xml elements.\"\"\"\n\n    def __init__(self):\n        self._map = {}\n\n    def __call__(self, element):\n        id = element_id(element)\n        if not id in self._map:\n            self._map[id] = 0\n        else:\n            self._map[id] += 1\n\n        return self._map[id]\n\n\nclass XMLCombiner(object):\n\n    def __init__(self, filenames):\n        assert len(filenames) > 0, \"No filenames!\"\n        # save all the roots, in order, to be processed later\n        # self.roots = [et.parse(f).getroot() for f in filenames]\n        self.roots = []\n        for f in filenames:\n            try:\n                self.roots.append(et.parse(f).getroot())\n            except xml.parsers.expat.ExpatError:  # ignores files with no root elements\n                pass\n\n    def combine(self):\n        for r in self.roots[1:]:\n            # combine each element with the first one, and update that\n            self.combine_element(self.roots[0], r)\n        # return the string representation\n        try:\n            return et.ElementTree(self.roots[0])\n        except IndexError:\n            raise IndexError(\"All files are empty!\")\n\n    def combine_element(self, one, other):\n        \"\"\"\n        This function recursively updates either the text or the children\n        of an element if another element is found in `one`, or adds it\n        from `other` if not found.\n        \"\"\"\n        # initialize index trackers\n        track_one = XMLIndexTracker()\n        track_other = XMLIndexTracker()\n\n        # Create a mapping from tag name to element, as that`s what we are filtering with\n        mapping = dict((element_id(el, track_one(el)), el) for el in one)\n        for child in other:\n            c_idx = track_other(child)\n            if len(child) == 0:\n                # Not nested\n                try:\n                    # Update the text\n                    mapping[element_id(child, c_idx)].text = child.text\n                except KeyError:\n                    # An element with this name is not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Add it\n                    one.append(child)\n            else:\n                try:\n                    # Recursively process the element, and update it in the same way\n                    self.combine_element(mapping[element_id(child, c_idx)], child)\n                except KeyError:\n                    # Not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Just add it\n                    one.append(child)\n\n\ndef element_attr(element):\n    \"\"\"Returns element hashable attr dict.\"\"\"\n    return hashabledict(element.attrib) if element.attrib else hashabledict({})\n\n\ndef element_id(element, idx=None):\n    if idx is not None:\n        return (element.tag, element_attr(element), idx)\n    return (element.tag, element_attr(element))\n\n\nmerge_files()\n", "scriptLanguage": "Jython", "storeComponentHistoryData": "true", "usageOfScript": "NEW"}, "dynamicInputs": [{"identifier": "bb7e83be-fad8-46a7-861e-99f265aa50de", "name": "XML", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}, {"identifier": "6fcaf041-95fa-41e5-9cbf-ec55dcf54de9", "name": "XML to integrate", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}], "dynamicOutputs": [{"identifier": "aad73985-24af-4c4c-b242-52d4d0f24a02", "name": "XML", "epIdentifier": "default", "datatype": "FileReference"}]}, {"identifier": "b85731a1-23e2-4bcf-b422-83f325a4987a", "name": "EngineBlock_input_filter", "location": "1030:935", "zIndex": "18", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis/bpr00\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis/bpr00\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "2cda83c1-9c26-4748-8b82-53da1e59cdef", "name": "XML", "datatype": "FileReference"}, {"identifier": "114e6299-ad74-4001-a2fb-c08ec81ad30f", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "9abdba70-bebd-4007-8b19-6021027950bd", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "eedc53da-d9b3-4ebd-841e-d660df7f217d", "name": "EngineBlock_output_filter", "location": "1105:1010", "zIndex": "19", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/geometry\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/geometry\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "b60bf93b-c2b0-452b-8820-b2165879688a", "name": "XML", "datatype": "FileReference"}, {"identifier": "dfb4acdc-65f1-444d-af76-b27bd3fb4e9c", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "4a8c7eeb-d45e-488c-92d5-5b99f5d9adbb", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "576b694b-df91-473a-ad5f-1c0c0847cc0a", "name": "EngineBlock_splitter", "location": "1085:935", "zIndex": "20", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "a3522685-0f6f-40d7-bdb7-5b53021dd526", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "1f1502a1-eaee-4a3f-b202-96945a75f82a", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "0648e6f2-5aba-4b77-a216-f6d9cc3e3568", "name": "EngineBlock_output_complement_filter", "location": "1140:935", "zIndex": "21", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles/aircraft |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles/aircraft |\n\t\t\t/cpacs/vehicles/engines/engine[@uID='engine']/analysis\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "86c4dda7-b8f9-44ff-8493-72bb7e27389b", "name": "XML", "datatype": "FileReference"}, {"identifier": "4e40e68d-701b-44a5-8e14-f4076c1d8ecc", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "5ebce820-1a1d-435a-b99c-a13b22e17f87", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "98223500-669b-4c5d-94fc-fadc650ef255", "name": "EngineBlock_merge_script", "location": "1120:1085", "zIndex": "22", "active": "true", "component": {"identifier": "de.rcenvironment.script", "version": "3.4", "name": "Script"}, "configuration": {"pythonExecutionPath": "${pythonExecutionPath}", "script": "# This script is converted to a string and used in a \"script\" component in RCE. It is compiled with Jython.\n\n# The script merges the `base` and `merge` files. Equal elements from the `merge` file have precedence.\n# More than one `merge` files are possible (must be appropriately modeled in the workflow).\n# Equal Elements from latter files take precedence.\n# Equality between elements is determined according to their ancestry, tag and attributes.\n# If element does not have attributes, its position as child node is taken as attribute.\n\n# Code is adapted from https://stackoverflow.com/a/29896847\n\nimport os\nimport xml\nimport time\nimport random\nfrom uuid import uuid4\nfrom xml.etree import ElementTree as et\n\n\ndef merge_files():\n    # f_base in first pos\n    base_path, merge_path = RCE.read_input(\"XML\"), RCE.read_input(\"XML to integrate\")\n\n    # rename input files, otherwise RCE will not update input files in subsequent script executions\n    base_path_renamed = random_rename(base_path)\n    os.rename(base_path, base_path_renamed)\n    merge_path_renamed = random_rename(merge_path)\n    os.rename(merge_path, merge_path_renamed)\n\n    merged_tree = XMLCombiner([base_path_renamed, merge_path_renamed]).combine()\n\n    # write output tree to file and output variable\n    output_path = random_rename(base_path, same_path=False)\n    f_base = open(output_path, \"wb\")\n    merged_tree.write(f_base, encoding=\"utf-8\")\n    f_base.close()\n    RCE.write_output(\"XML\", output_path)\n\n\ndef random_rename(file_path, same_path=True):\n    file_name, file_ext = os.path.splitext(file_path)\n    renamed_file = file_name + \"_renamed_\" + str(int(time.time() * 1000)) + \"_\" + str(\n        int(random.randint(0, 1000000))) + file_ext\n    if not same_path:\n        return renamed_file\n    return os.path.join(os.path.dirname(file_path), renamed_file)\n\n\nclass hashabledict(dict):\n\n    def __hash__(self):\n        return hash(tuple(sorted(self.items())))\n\n\nclass XMLIndexTracker(object):\n    \"\"\"Tracks the index of similar xml elements.\"\"\"\n\n    def __init__(self):\n        self._map = {}\n\n    def __call__(self, element):\n        id = element_id(element)\n        if not id in self._map:\n            self._map[id] = 0\n        else:\n            self._map[id] += 1\n\n        return self._map[id]\n\n\nclass XMLCombiner(object):\n\n    def __init__(self, filenames):\n        assert len(filenames) > 0, \"No filenames!\"\n        # save all the roots, in order, to be processed later\n        # self.roots = [et.parse(f).getroot() for f in filenames]\n        self.roots = []\n        for f in filenames:\n            try:\n                self.roots.append(et.parse(f).getroot())\n            except xml.parsers.expat.ExpatError:  # ignores files with no root elements\n                pass\n\n    def combine(self):\n        for r in self.roots[1:]:\n            # combine each element with the first one, and update that\n            self.combine_element(self.roots[0], r)\n        # return the string representation\n        try:\n            return et.ElementTree(self.roots[0])\n        except IndexError:\n            raise IndexError(\"All files are empty!\")\n\n    def combine_element(self, one, other):\n        \"\"\"\n        This function recursively updates either the text or the children\n        of an element if another element is found in `one`, or adds it\n        from `other` if not found.\n        \"\"\"\n        # initialize index trackers\n        track_one = XMLIndexTracker()\n        track_other = XMLIndexTracker()\n\n        # Create a mapping from tag name to element, as that`s what we are filtering with\n        mapping = dict((element_id(el, track_one(el)), el) for el in one)\n        for child in other:\n            c_idx = track_other(child)\n            if len(child) == 0:\n                # Not nested\n                try:\n                    # Update the text\n                    mapping[element_id(child, c_idx)].text = child.text\n                except KeyError:\n                    # An element with this name is not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Add it\n                    one.append(child)\n            else:\n                try:\n                    # Recursively process the element, and update it in the same way\n                    self.combine_element(mapping[element_id(child, c_idx)], child)\n                except KeyError:\n                    # Not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Just add it\n                    one.append(child)\n\n\ndef element_attr(element):\n    \"\"\"Returns element hashable attr dict.\"\"\"\n    return hashabledict(element.attrib) if element.attrib else hashabledict({})\n\n\ndef element_id(element, idx=None):\n    if idx is not None:\n        return (element.tag, element_attr(element), idx)\n    return (element.tag, element_attr(element))\n\n\nmerge_files()\n", "scriptLanguage": "Jython", "storeComponentHistoryData": "true", "usageOfScript": "NEW"}, "dynamicInputs": [{"identifier": "ea8c443c-6288-48ad-9ec5-dd3608040f72", "name": "XML", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}, {"identifier": "772447f2-7b00-4fd0-97b8-8c86fa3bc4db", "name": "XML to integrate", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}], "dynamicOutputs": [{"identifier": "ff05c34f-7691-462f-bc01-c3f6dd6aa4d1", "name": "XML", "epIdentifier": "default", "datatype": "FileReference"}]}, {"identifier": "033258df-888b-44c9-911d-ceb740c26495", "name": "HybridSystemBlock_input_filter", "location": "1330:1215", "zIndex": "23", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs/SFCclean[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/SFCnew[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs/MainPhasesDuration[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/designMasses |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/reference\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs/SFCclean[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/SFCnew[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs/MainPhasesDuration[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs/NumberEngines |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Inputs/AltitudeCruise |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/designMasses |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/reference\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "951e88c8-2658-4fa5-b037-b004808685f8", "name": "XML", "datatype": "FileReference"}, {"identifier": "d3a50641-30fe-4143-a2e4-7529c5914a77", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "33c26305-7031-497f-b69e-60f129587312", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "92de349c-3684-4b92-9881-a2d313128f56", "name": "HybridSystemBlock_output_filter", "location": "1405:1290", "zIndex": "24", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/SFCnew[@mapType='vector']\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/SFCnew[@mapType='vector']\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "d4b25ead-e49c-48da-8ea7-3a96ae4d5b28", "name": "XML", "datatype": "FileReference"}, {"identifier": "850f7f43-c491-4eb9-9aa0-92b2710e297f", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "b4556d68-55c6-4ad0-b2d5-645aeb5b9ac2", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "143aa884-d0dc-4ccf-9d20-4e4cf10051b4", "name": "HybridSystemBlock_splitter", "location": "1385:1215", "zIndex": "25", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "a669073f-d475-4245-b12f-436102adaf90", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "78e9f3a8-795a-44da-9d70-9d7ab9104671", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "917f008d-e78e-43c1-bb99-1312d01dbb89", "name": "HybridSystemBlock_output_complement_filter", "location": "1440:1215", "zIndex": "26", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/EngineDryMass |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/EngineDryMass |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "e5492cb7-4a58-45f0-b564-a7c4d649803e", "name": "XML", "datatype": "FileReference"}, {"identifier": "88c176ac-ebd6-4b06-a6dc-2fc0883d2b37", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "11af6560-9c22-4945-9c08-c6fb4e9b1cd8", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "656662a2-cfb0-49ec-bc3b-e2fe12ef1ffd", "name": "HybridSystemBlock_merge_script", "location": "1420:1365", "zIndex": "27", "active": "true", "component": {"identifier": "de.rcenvironment.script", "version": "3.4", "name": "Script"}, "configuration": {"pythonExecutionPath": "${pythonExecutionPath}", "script": "# This script is converted to a string and used in a \"script\" component in RCE. It is compiled with Jython.\n\n# The script merges the `base` and `merge` files. Equal elements from the `merge` file have precedence.\n# More than one `merge` files are possible (must be appropriately modeled in the workflow).\n# Equal Elements from latter files take precedence.\n# Equality between elements is determined according to their ancestry, tag and attributes.\n# If element does not have attributes, its position as child node is taken as attribute.\n\n# Code is adapted from https://stackoverflow.com/a/29896847\n\nimport os\nimport xml\nimport time\nimport random\nfrom uuid import uuid4\nfrom xml.etree import ElementTree as et\n\n\ndef merge_files():\n    # f_base in first pos\n    base_path, merge_path = RCE.read_input(\"XML\"), RCE.read_input(\"XML to integrate\")\n\n    # rename input files, otherwise RCE will not update input files in subsequent script executions\n    base_path_renamed = random_rename(base_path)\n    os.rename(base_path, base_path_renamed)\n    merge_path_renamed = random_rename(merge_path)\n    os.rename(merge_path, merge_path_renamed)\n\n    merged_tree = XMLCombiner([base_path_renamed, merge_path_renamed]).combine()\n\n    # write output tree to file and output variable\n    output_path = random_rename(base_path, same_path=False)\n    f_base = open(output_path, \"wb\")\n    merged_tree.write(f_base, encoding=\"utf-8\")\n    f_base.close()\n    RCE.write_output(\"XML\", output_path)\n\n\ndef random_rename(file_path, same_path=True):\n    file_name, file_ext = os.path.splitext(file_path)\n    renamed_file = file_name + \"_renamed_\" + str(int(time.time() * 1000)) + \"_\" + str(\n        int(random.randint(0, 1000000))) + file_ext\n    if not same_path:\n        return renamed_file\n    return os.path.join(os.path.dirname(file_path), renamed_file)\n\n\nclass hashabledict(dict):\n\n    def __hash__(self):\n        return hash(tuple(sorted(self.items())))\n\n\nclass XMLIndexTracker(object):\n    \"\"\"Tracks the index of similar xml elements.\"\"\"\n\n    def __init__(self):\n        self._map = {}\n\n    def __call__(self, element):\n        id = element_id(element)\n        if not id in self._map:\n            self._map[id] = 0\n        else:\n            self._map[id] += 1\n\n        return self._map[id]\n\n\nclass XMLCombiner(object):\n\n    def __init__(self, filenames):\n        assert len(filenames) > 0, \"No filenames!\"\n        # save all the roots, in order, to be processed later\n        # self.roots = [et.parse(f).getroot() for f in filenames]\n        self.roots = []\n        for f in filenames:\n            try:\n                self.roots.append(et.parse(f).getroot())\n            except xml.parsers.expat.ExpatError:  # ignores files with no root elements\n                pass\n\n    def combine(self):\n        for r in self.roots[1:]:\n            # combine each element with the first one, and update that\n            self.combine_element(self.roots[0], r)\n        # return the string representation\n        try:\n            return et.ElementTree(self.roots[0])\n        except IndexError:\n            raise IndexError(\"All files are empty!\")\n\n    def combine_element(self, one, other):\n        \"\"\"\n        This function recursively updates either the text or the children\n        of an element if another element is found in `one`, or adds it\n        from `other` if not found.\n        \"\"\"\n        # initialize index trackers\n        track_one = XMLIndexTracker()\n        track_other = XMLIndexTracker()\n\n        # Create a mapping from tag name to element, as that`s what we are filtering with\n        mapping = dict((element_id(el, track_one(el)), el) for el in one)\n        for child in other:\n            c_idx = track_other(child)\n            if len(child) == 0:\n                # Not nested\n                try:\n                    # Update the text\n                    mapping[element_id(child, c_idx)].text = child.text\n                except KeyError:\n                    # An element with this name is not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Add it\n                    one.append(child)\n            else:\n                try:\n                    # Recursively process the element, and update it in the same way\n                    self.combine_element(mapping[element_id(child, c_idx)], child)\n                except KeyError:\n                    # Not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Just add it\n                    one.append(child)\n\n\ndef element_attr(element):\n    \"\"\"Returns element hashable attr dict.\"\"\"\n    return hashabledict(element.attrib) if element.attrib else hashabledict({})\n\n\ndef element_id(element, idx=None):\n    if idx is not None:\n        return (element.tag, element_attr(element), idx)\n    return (element.tag, element_attr(element))\n\n\nmerge_files()\n", "scriptLanguage": "Jython", "storeComponentHistoryData": "true", "usageOfScript": "NEW"}, "dynamicInputs": [{"identifier": "94c1cc6e-f040-4a03-ba24-3e6622fb9e4e", "name": "XML", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}, {"identifier": "edd3a77f-8264-4617-a397-a58ed41572fd", "name": "XML to integrate", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}], "dynamicOutputs": [{"identifier": "efdf8aa5-21d4-4dcc-900f-97320b3408f0", "name": "XML", "epIdentifier": "default", "datatype": "FileReference"}]}, {"identifier": "021f0b30-f2b3-4df6-8b53-4f309c1518c0", "name": "MissionBlock_input_filter", "location": "1630:1495", "zIndex": "28", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/SFCnew[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/SFCnew[@mapType='vector'] |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel/Outputs\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "ed4b2fc3-e531-49ec-9817-5ebdffed06d2", "name": "XML", "datatype": "FileReference"}, {"identifier": "e5ceba5a-d883-40a9-947e-d198458723c8", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "c0a845b3-1b70-41e7-92de-e6ad3f72f403", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "8ecae6df-d92b-4acb-96ec-085ac8acaa7d", "name": "MissionBlock_output_filter", "location": "1705:1570", "zIndex": "29", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Outputs\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Outputs\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "a856bd0a-55f0-4b88-825b-dc30fb94a2f1", "name": "XML", "datatype": "FileReference"}, {"identifier": "3452a00e-f936-4b15-9d6f-7338c0c6fa37", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "55b8bb63-5f28-44aa-bbb8-ee5c4803a1ec", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "12ed4032-30c6-4186-8967-5c8713fc49a2", "name": "MissionBlock_splitter", "location": "1685:1495", "zIndex": "30", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "3fd4ffaa-257b-40f3-ba70-db1eb3299659", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "c81a3829-8291-48d1-88e1-5fd0fca73409", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "68f77ae4-89e8-4f32-ab03-47828399dcc5", "name": "MissionBlock_output_complement_filter", "location": "1740:1495", "zIndex": "31", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/ASTRID |\n\t\t\t/cpacs/toolspecific/HybridTool |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Inputs |\n\t\t\t/cpacs/toolspecific/SimplifiedPerformanceModel |\n\t\t\t/cpacs/toolspecific/technologies |\n\t\t\t/cpacs/vehicles\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "100aacd2-e354-4ff5-beb0-680017882355", "name": "XML", "datatype": "FileReference"}, {"identifier": "86a9b7f3-2a2d-4462-8f41-9fd6886d4162", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "f90224bf-1b61-4ed3-b43d-2c594727af7c", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "9b5e1cb8-37cf-4e08-8bc8-dd1471734a2b", "name": "MissionBlock_merge_script", "location": "1720:1645", "zIndex": "32", "active": "true", "component": {"identifier": "de.rcenvironment.script", "version": "3.4", "name": "Script"}, "configuration": {"pythonExecutionPath": "${pythonExecutionPath}", "script": "# This script is converted to a string and used in a \"script\" component in RCE. It is compiled with Jython.\n\n# The script merges the `base` and `merge` files. Equal elements from the `merge` file have precedence.\n# More than one `merge` files are possible (must be appropriately modeled in the workflow).\n# Equal Elements from latter files take precedence.\n# Equality between elements is determined according to their ancestry, tag and attributes.\n# If element does not have attributes, its position as child node is taken as attribute.\n\n# Code is adapted from https://stackoverflow.com/a/29896847\n\nimport os\nimport xml\nimport time\nimport random\nfrom uuid import uuid4\nfrom xml.etree import ElementTree as et\n\n\ndef merge_files():\n    # f_base in first pos\n    base_path, merge_path = RCE.read_input(\"XML\"), RCE.read_input(\"XML to integrate\")\n\n    # rename input files, otherwise RCE will not update input files in subsequent script executions\n    base_path_renamed = random_rename(base_path)\n    os.rename(base_path, base_path_renamed)\n    merge_path_renamed = random_rename(merge_path)\n    os.rename(merge_path, merge_path_renamed)\n\n    merged_tree = XMLCombiner([base_path_renamed, merge_path_renamed]).combine()\n\n    # write output tree to file and output variable\n    output_path = random_rename(base_path, same_path=False)\n    f_base = open(output_path, \"wb\")\n    merged_tree.write(f_base, encoding=\"utf-8\")\n    f_base.close()\n    RCE.write_output(\"XML\", output_path)\n\n\ndef random_rename(file_path, same_path=True):\n    file_name, file_ext = os.path.splitext(file_path)\n    renamed_file = file_name + \"_renamed_\" + str(int(time.time() * 1000)) + \"_\" + str(\n        int(random.randint(0, 1000000))) + file_ext\n    if not same_path:\n        return renamed_file\n    return os.path.join(os.path.dirname(file_path), renamed_file)\n\n\nclass hashabledict(dict):\n\n    def __hash__(self):\n        return hash(tuple(sorted(self.items())))\n\n\nclass XMLIndexTracker(object):\n    \"\"\"Tracks the index of similar xml elements.\"\"\"\n\n    def __init__(self):\n        self._map = {}\n\n    def __call__(self, element):\n        id = element_id(element)\n        if not id in self._map:\n            self._map[id] = 0\n        else:\n            self._map[id] += 1\n\n        return self._map[id]\n\n\nclass XMLCombiner(object):\n\n    def __init__(self, filenames):\n        assert len(filenames) > 0, \"No filenames!\"\n        # save all the roots, in order, to be processed later\n        # self.roots = [et.parse(f).getroot() for f in filenames]\n        self.roots = []\n        for f in filenames:\n            try:\n                self.roots.append(et.parse(f).getroot())\n            except xml.parsers.expat.ExpatError:  # ignores files with no root elements\n                pass\n\n    def combine(self):\n        for r in self.roots[1:]:\n            # combine each element with the first one, and update that\n            self.combine_element(self.roots[0], r)\n        # return the string representation\n        try:\n            return et.ElementTree(self.roots[0])\n        except IndexError:\n            raise IndexError(\"All files are empty!\")\n\n    def combine_element(self, one, other):\n        \"\"\"\n        This function recursively updates either the text or the children\n        of an element if another element is found in `one`, or adds it\n        from `other` if not found.\n        \"\"\"\n        # initialize index trackers\n        track_one = XMLIndexTracker()\n        track_other = XMLIndexTracker()\n\n        # Create a mapping from tag name to element, as that`s what we are filtering with\n        mapping = dict((element_id(el, track_one(el)), el) for el in one)\n        for child in other:\n            c_idx = track_other(child)\n            if len(child) == 0:\n                # Not nested\n                try:\n                    # Update the text\n                    mapping[element_id(child, c_idx)].text = child.text\n                except KeyError:\n                    # An element with this name is not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Add it\n                    one.append(child)\n            else:\n                try:\n                    # Recursively process the element, and update it in the same way\n                    self.combine_element(mapping[element_id(child, c_idx)], child)\n                except KeyError:\n                    # Not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Just add it\n                    one.append(child)\n\n\ndef element_attr(element):\n    \"\"\"Returns element hashable attr dict.\"\"\"\n    return hashabledict(element.attrib) if element.attrib else hashabledict({})\n\n\ndef element_id(element, idx=None):\n    if idx is not None:\n        return (element.tag, element_attr(element), idx)\n    return (element.tag, element_attr(element))\n\n\nmerge_files()\n", "scriptLanguage": "Jython", "storeComponentHistoryData": "true", "usageOfScript": "NEW"}, "dynamicInputs": [{"identifier": "d8436045-bb39-46a0-87fc-92e59f29018e", "name": "XML", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}, {"identifier": "94883d38-201d-458a-ada5-88549e37358a", "name": "XML to integrate", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}], "dynamicOutputs": [{"identifier": "b45fc373-a828-446d-a2c8-a65f3d9a03e6", "name": "XML", "epIdentifier": "default", "datatype": "FileReference"}]}, {"identifier": "b27cd17b-1a19-468f-a2eb-ff739c43750f", "name": "MassesBlock_input_filter", "location": "1930:1775", "zIndex": "33", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/HybridTool/Outputs/mHybridSystem |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/EngineDryMass |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Outputs/FuelReserves |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Outputs/MissionFuel |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mFurnishing |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mStructure |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mSystems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mOperatorItems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/massDescription |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/payload\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific/HybridTool/Outputs/mHybridSystem |\n\t\t\t/cpacs/toolspecific/SimplifiedEngineModel/Outputs/EngineDryMass |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Outputs/FuelReserves |\n\t\t\t/cpacs/toolspecific/SimplifiedMissionModel/Outputs/MissionFuel |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mFurnishing |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mStructure |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mSystems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mOperatorItems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/massDescription |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/payload\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "a116336b-56e9-4f72-810a-234281122e87", "name": "XML", "datatype": "FileReference"}, {"identifier": "3fa8a067-e99c-448b-aa4c-93470dcfb6b9", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "184f9a4c-df89-4a59-9aef-54d7eab5b8e9", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "5f70a248-2fd9-40de-8555-2f37b9601e98", "name": "MassesBlock_output_filter", "location": "2005:1850", "zIndex": "34", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/designMasses |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/massDescription |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/massDescription\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/designMasses |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/massDescription |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/massDescription\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "156421d0-d30f-4974-896b-46f7021778b0", "name": "XML", "datatype": "FileReference"}, {"identifier": "e2a8e4f8-a031-47e5-9255-776478051af3", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "8c8cc94e-7099-44d2-9610-f903dcfc9160", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "29937c7d-1f62-421c-a095-4fdb52b4785f", "name": "MassesBlock_splitter", "location": "1985:1775", "zIndex": "35", "active": "true", "component": {"identifier": "de.rcenvironment.xmlvalues", "version": "1.0", "name": "XML Values"}, "configuration": {"storeComponentHistoryData": "true"}, "staticInputs": [{"identifier": "8612c580-79a0-4fd5-8578-3fed1b05e9e5", "name": "XML", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "72c19f03-4247-4983-8831-47e56705e0b6", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "6a1ca07b-6562-4a05-b9a6-c68306ae2127", "name": "MassesBlock_output_complement_filter", "location": "2040:1775", "zIndex": "36", "active": "true", "component": {"identifier": "de.rcenvironment.xmlmerger", "version": "4.0", "name": "File Merger"}, "configuration": {"mappingFileDeployment": "loaded", "mappingType": "XSLT", "storeComponentHistoryData": "true", "xmlContent": "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exclude-result-prefixes=\"xsi\">\n\t<xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n\n\t<!-- Filter by XPATHS -->\n\n\t<xsl:template match=\"*[descendant::node() intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/aeroPerformanceMap |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mFurnishing |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mStructure |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mSystems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mOperatorItems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/payload |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/reference |\n\t\t\t/cpacs/vehicles/engines\n\t\t)]\" priority=\"1\">\n\t\t<xsl:copy>\n\t\t\t<xsl:copy-of select='@*'/>\n\t\t\t<xsl:apply-templates select='*'/>\n\t\t</xsl:copy>\n\t</xsl:template>\n\n\t<xsl:template match=\"*[. intersect (\n\t\t\t/cpacs/header |\n\t\t\t/cpacs/toolspecific |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/aeroPerformanceMap |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mFurnishing |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mStructure |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mEM/mSystems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/mOEM/mOperatorItems |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/analyses/massBreakdown/payload |\n\t\t\t/cpacs/vehicles/aircraft/model[@uID='model']/reference |\n\t\t\t/cpacs/vehicles/engines\n\t\t)]\" priority=\"2\">\n\t\t<xsl:copy-of select='.'/>\n\t</xsl:template>\n\n\t<!-- remove unbound text -->\n\n\t<xsl:template match=\"text()\">\n\t\t<xsl:if test=\"preceding::comment() and following::comment()\"></xsl:if>\n\t</xsl:template>\n\n</xsl:stylesheet>"}, "staticInputs": [{"identifier": "18c13d2d-49d7-424c-b662-43e2b84f4f84", "name": "XML", "datatype": "FileReference"}, {"identifier": "4628acf4-a12d-41c4-985f-e0fb225be9cc", "name": "XML to integrate", "datatype": "FileReference"}], "staticOutputs": [{"identifier": "379e830c-f2a3-4b19-b9fe-34ca37a41ee7", "name": "XML", "datatype": "FileReference"}]}, {"identifier": "8db92058-8c4c-471a-92cf-2747f21514f5", "name": "MassesBlock_merge_script", "location": "2020:1925", "zIndex": "37", "active": "true", "component": {"identifier": "de.rcenvironment.script", "version": "3.4", "name": "Script"}, "configuration": {"pythonExecutionPath": "${pythonExecutionPath}", "script": "# This script is converted to a string and used in a \"script\" component in RCE. It is compiled with Jython.\n\n# The script merges the `base` and `merge` files. Equal elements from the `merge` file have precedence.\n# More than one `merge` files are possible (must be appropriately modeled in the workflow).\n# Equal Elements from latter files take precedence.\n# Equality between elements is determined according to their ancestry, tag and attributes.\n# If element does not have attributes, its position as child node is taken as attribute.\n\n# Code is adapted from https://stackoverflow.com/a/29896847\n\nimport os\nimport xml\nimport time\nimport random\nfrom uuid import uuid4\nfrom xml.etree import ElementTree as et\n\n\ndef merge_files():\n    # f_base in first pos\n    base_path, merge_path = RCE.read_input(\"XML\"), RCE.read_input(\"XML to integrate\")\n\n    # rename input files, otherwise RCE will not update input files in subsequent script executions\n    base_path_renamed = random_rename(base_path)\n    os.rename(base_path, base_path_renamed)\n    merge_path_renamed = random_rename(merge_path)\n    os.rename(merge_path, merge_path_renamed)\n\n    merged_tree = XMLCombiner([base_path_renamed, merge_path_renamed]).combine()\n\n    # write output tree to file and output variable\n    output_path = random_rename(base_path, same_path=False)\n    f_base = open(output_path, \"wb\")\n    merged_tree.write(f_base, encoding=\"utf-8\")\n    f_base.close()\n    RCE.write_output(\"XML\", output_path)\n\n\ndef random_rename(file_path, same_path=True):\n    file_name, file_ext = os.path.splitext(file_path)\n    renamed_file = file_name + \"_renamed_\" + str(int(time.time() * 1000)) + \"_\" + str(\n        int(random.randint(0, 1000000))) + file_ext\n    if not same_path:\n        return renamed_file\n    return os.path.join(os.path.dirname(file_path), renamed_file)\n\n\nclass hashabledict(dict):\n\n    def __hash__(self):\n        return hash(tuple(sorted(self.items())))\n\n\nclass XMLIndexTracker(object):\n    \"\"\"Tracks the index of similar xml elements.\"\"\"\n\n    def __init__(self):\n        self._map = {}\n\n    def __call__(self, element):\n        id = element_id(element)\n        if not id in self._map:\n            self._map[id] = 0\n        else:\n            self._map[id] += 1\n\n        return self._map[id]\n\n\nclass XMLCombiner(object):\n\n    def __init__(self, filenames):\n        assert len(filenames) > 0, \"No filenames!\"\n        # save all the roots, in order, to be processed later\n        # self.roots = [et.parse(f).getroot() for f in filenames]\n        self.roots = []\n        for f in filenames:\n            try:\n                self.roots.append(et.parse(f).getroot())\n            except xml.parsers.expat.ExpatError:  # ignores files with no root elements\n                pass\n\n    def combine(self):\n        for r in self.roots[1:]:\n            # combine each element with the first one, and update that\n            self.combine_element(self.roots[0], r)\n        # return the string representation\n        try:\n            return et.ElementTree(self.roots[0])\n        except IndexError:\n            raise IndexError(\"All files are empty!\")\n\n    def combine_element(self, one, other):\n        \"\"\"\n        This function recursively updates either the text or the children\n        of an element if another element is found in `one`, or adds it\n        from `other` if not found.\n        \"\"\"\n        # initialize index trackers\n        track_one = XMLIndexTracker()\n        track_other = XMLIndexTracker()\n\n        # Create a mapping from tag name to element, as that`s what we are filtering with\n        mapping = dict((element_id(el, track_one(el)), el) for el in one)\n        for child in other:\n            c_idx = track_other(child)\n            if len(child) == 0:\n                # Not nested\n                try:\n                    # Update the text\n                    mapping[element_id(child, c_idx)].text = child.text\n                except KeyError:\n                    # An element with this name is not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Add it\n                    one.append(child)\n            else:\n                try:\n                    # Recursively process the element, and update it in the same way\n                    self.combine_element(mapping[element_id(child, c_idx)], child)\n                except KeyError:\n                    # Not in the mapping\n                    mapping[element_id(child, c_idx)] = child\n                    # Just add it\n                    one.append(child)\n\n\ndef element_attr(element):\n    \"\"\"Returns element hashable attr dict.\"\"\"\n    return hashabledict(element.attrib) if element.attrib else hashabledict({})\n\n\ndef element_id(element, idx=None):\n    if idx is not None:\n        return (element.tag, element_attr(element), idx)\n    return (element.tag, element_attr(element))\n\n\nmerge_files()\n", "scriptLanguage": "Jython", "storeComponentHistoryData": "true", "usageOfScript": "NEW"}, "dynamicInputs": [{"identifier": "b3cd34ba-580d-42b4-84f8-1d94e8096a77", "name": "XML", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}, {"identifier": "7a405682-d64c-4c14-b088-79cb9fc966f7", "name": "XML to integrate", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"inputExecutionConstraint_4aae3eea": "Required", "inputHandling_73b1056e": "Queue"}}], "dynamicOutputs": [{"identifier": "9fd53221-0705-41ef-8856-40d01ca28b2b", "name": "XML", "epIdentifier": "default", "datatype": "FileReference"}]}, {"identifier": "2e4f3960-392e-47b9-86a6-4fdbd7448d11", "name": "Input_Provider", "location": "150:100", "zIndex": "38", "active": "true", "component": {"identifier": "de.rcenvironment.inputprovider", "version": "3.2", "name": "Input Provider"}, "configuration": {"storeComponentHistoryData": "true"}, "dynamicOutputs": [{"identifier": "390b5aec-cf14-4cf3-85c7-cc0f2921f897", "name": "XML", "epIdentifier": "default", "datatype": "FileReference", "metadata": {"fileSourceType": "atWorkflowStart", "startValue": ""}}]}, {"identifier": "f8477cb1-45c7-42fb-8eb1-bb6c2c7ac88c", "name": "Optimizer_Output_Writer", "location": "2170:290", "zIndex": "39", "active": "true", "component": {"identifier": "de.rcenvironment.outputwriter", "version": "2.0", "name": "Output Writer"}, "configuration": {"OWWritePath": "${targetRootFolder}", "SelectRootOnWorkflowStart": "true", "SelectedRoot": "", "storeComponentHistoryData": "true"}, "dynamicInputs": [{"identifier": "0777cae7-372e-4ab1-8a21-d3f07118caad", "name": "XML", "epIdentifier": "default", "group": "write", "datatype": "FileReference", "metadata": {"filename": "[Timestamp at workflow start]__[Workflow name]__[Execution count].xml", "folderForSaving": "[root]"}}], "dynamicInputGroups": [{"identifier": "4ae611ae-5f94-4657-9a71-738f883d627d", "name": "4ae611ae-5f94-4657-9a71-738f883d627d", "epIdentifier": "dynamicAndGroup"}]}], "connections": [{"source": "b55b7d15-961e-4810-b80b-69b72cabf509", "output": "3ae35daf-e537-47f4-b868-19dd27396b07", "target": "55d53866-e288-4ec0-bc3a-da514cc22c01", "input": "94e0a4d1-dc0a-4c80-a40d-9135f5815c3d"}, {"source": "b55b7d15-961e-4810-b80b-69b72cabf509", "output": "b2908a9e-0d04-47c1-8115-44658b25c423", "target": "55d53866-e288-4ec0-bc3a-da514cc22c01", "input": "49aad90c-c34f-4736-8a42-c87148170d8e"}, {"source": "b55b7d15-961e-4810-b80b-69b72cabf509", "output": "6e7b6952-c4b7-44b5-9f87-5fb756c62e1b", "target": "55d53866-e288-4ec0-bc3a-da514cc22c01", "input": "bff96bf0-1d34-4016-8c41-08edd32ac02f"}, {"source": "b55b7d15-961e-4810-b80b-69b72cabf509", "output": "e4b4901e-af9b-4885-8d54-d8c79a8debe8", "target": "55d53866-e288-4ec0-bc3a-da514cc22c01", "input": "80e8f300-592a-4256-b0de-56585374a484"}, {"source": "f1e2ff75-a53f-4ba5-a691-a0c5ff6fddbc", "output": "4f504384-f15e-4e6c-b6d7-3790a51aebd3", "target": "55d53866-e288-4ec0-bc3a-da514cc22c01", "input": "36969676-58f8-418e-8310-03995c26df01"}, {"source": "f1e2ff75-a53f-4ba5-a691-a0c5ff6fddbc", "output": "2c955e37-967b-458e-95f0-31bf5dcf2eaa", "target": "55d53866-e288-4ec0-bc3a-da514cc22c01", "input": "f599b780-9ec3-46d1-a548-f3e6f72e84fb"}, {"source": "55d53866-e288-4ec0-bc3a-da514cc22c01", "output": "11817c0c-c117-4729-b5e8-6d64aab8614e", "target": "fb60ac34-4b01-4e89-ab11-aff444ebdeb0", "input": "bba08d56-8d9a-4105-8d37-4f1952f94057"}, {"source": "55d53866-e288-4ec0-bc3a-da514cc22c01", "output": "ca6e1fb2-b2c0-4933-a5c7-6b698dc8f3d9", "target": "fb60ac34-4b01-4e89-ab11-aff444ebdeb0", "input": "35f39130-ceab-49f4-8190-9cc4dff36bba"}, {"source": "55d53866-e288-4ec0-bc3a-da514cc22c01", "output": "fe8f408f-cc8c-4331-80f4-05ec4f865258", "target": "fb60ac34-4b01-4e89-ab11-aff444ebdeb0", "input": "db1f2ec8-50eb-4dec-aed0-5ee93d74d531"}, {"source": "55d53866-e288-4ec0-bc3a-da514cc22c01", "output": "1d657c3c-0b2f-44b7-8aaa-06a669744d38", "target": "fb60ac34-4b01-4e89-ab11-aff444ebdeb0", "input": "85ce33f2-8cfd-4e82-9aae-6d10776cc88e"}, {"source": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "output": "54e8bf31-86ae-4e7a-9ab3-929055f0db65", "target": "f1e2ff75-a53f-4ba5-a691-a0c5ff6fddbc", "input": "deb85096-3a02-4c97-a524-834bf694e9f2"}, {"source": "c3da5267-bf98-46b1-ab07-660c35b2619a", "output": "6da911a2-4fb5-48f6-9eb8-c325e6885e74", "target": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "input": "b323fa3d-c691-4d2d-9ad4-4f1d88fd8e25"}, {"source": "c3da5267-bf98-46b1-ab07-660c35b2619a", "output": "795998d0-8f65-4d0b-a8a9-ca65285d13d5", "target": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "input": "f8c531cd-b437-4a22-98f9-869372d060b8"}, {"source": "96a2c156-b4ca-420b-be5f-d71e84846fdc", "output": "1c1d12ec-8b29-4eff-b5e1-791d91be8005", "target": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "input": "60580c6b-2683-4130-8b2b-adaf64fe6176"}, {"source": "96a2c156-b4ca-420b-be5f-d71e84846fdc", "output": "3546cf51-49c7-44a1-bb4d-782c5d6cc6e5", "target": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "input": "8d63a9b9-30f0-4209-b160-af50f77bdb2e"}, {"source": "fb60ac34-4b01-4e89-ab11-aff444ebdeb0", "output": "d77b9759-0718-43c3-a5f7-022b54768bcf", "target": "c3da5267-bf98-46b1-ab07-660c35b2619a", "input": "3e0261f2-1a71-427d-9da3-78011cc62d37"}, {"source": "8db92058-8c4c-471a-92cf-2747f21514f5", "output": "9fd53221-0705-41ef-8856-40d01ca28b2b", "target": "96a2c156-b4ca-420b-be5f-d71e84846fdc", "input": "3349e1b8-54a5-4f85-92e7-da509b0bcbb2"}, {"source": "2847ccab-6410-4549-8636-26e8ff457953", "output": "364ec926-f4f1-4d43-bbac-a3ff9fe64777", "target": "309f2a73-ee6f-4cbd-8fc0-04a192fd3084", "input": "2a028fbe-be0a-4964-8f16-5ae9b89fb7a3"}, {"source": "2847ccab-6410-4549-8636-26e8ff457953", "output": "364ec926-f4f1-4d43-bbac-a3ff9fe64777", "target": "309f2a73-ee6f-4cbd-8fc0-04a192fd3084", "input": "0845f5aa-c6f8-4f3a-a510-a50808186bae"}, {"source": "309f2a73-ee6f-4cbd-8fc0-04a192fd3084", "output": "59b63671-268a-48df-8251-291149afba34", "target": "5407401c-31f8-42f1-925b-21e015885d2c", "input": "f95e047f-6867-49ca-8329-4b6f0342aa9c"}, {"source": "2847ccab-6410-4549-8636-26e8ff457953", "output": "364ec926-f4f1-4d43-bbac-a3ff9fe64777", "target": "231f6313-24d5-48e3-a006-7afc415b3ab7", "input": "424f878e-acaf-41e5-93fe-020a351504fc"}, {"source": "2847ccab-6410-4549-8636-26e8ff457953", "output": "364ec926-f4f1-4d43-bbac-a3ff9fe64777", "target": "231f6313-24d5-48e3-a006-7afc415b3ab7", "input": "345de49a-2184-439d-ae3a-e0dff8ea4408"}, {"source": "231f6313-24d5-48e3-a006-7afc415b3ab7", "output": "59ca3743-65e9-4638-8e99-7d93518fd977", "target": "09f3cb26-f34a-4be8-be43-43b727acd0d4", "input": "bb7e83be-fad8-46a7-861e-99f265aa50de"}, {"source": "5407401c-31f8-42f1-925b-21e015885d2c", "output": "463e35da-215e-48bb-a3f5-9633c874db6e", "target": "1b05b60c-3e9b-4642-b389-75ab9c36b312", "input": "2f7aeee0-ee2e-4dd5-b4ab-a079595d714b"}, {"source": "5407401c-31f8-42f1-925b-21e015885d2c", "output": "463e35da-215e-48bb-a3f5-9633c874db6e", "target": "1b05b60c-3e9b-4642-b389-75ab9c36b312", "input": "d024a5f1-b1cb-4b23-b1be-3c765ef96ffd"}, {"source": "1b05b60c-3e9b-4642-b389-75ab9c36b312", "output": "a699f5b5-9a58-46e1-a4c5-cb855a7d4e84", "target": "09f3cb26-f34a-4be8-be43-43b727acd0d4", "input": "6fcaf041-95fa-41e5-9cbf-ec55dcf54de9"}, {"source": "3bae34aa-4ba9-4949-bcf8-3ff96e40d721", "output": "85ddea4b-079e-4981-a9f7-ecd2d2d32016", "target": "2847ccab-6410-4549-8636-26e8ff457953", "input": "e0300fe0-012d-43ce-8ca3-b0cbf8cead00"}, {"source": "576b694b-df91-473a-ad5f-1c0c0847cc0a", "output": "1f1502a1-eaee-4a3f-b202-96945a75f82a", "target": "b85731a1-23e2-4bcf-b422-83f325a4987a", "input": "2cda83c1-9c26-4748-8b82-53da1e59cdef"}, {"source": "576b694b-df91-473a-ad5f-1c0c0847cc0a", "output": "1f1502a1-eaee-4a3f-b202-96945a75f82a", "target": "b85731a1-23e2-4bcf-b422-83f325a4987a", "input": "114e6299-ad74-4001-a2fb-c08ec81ad30f"}, {"source": "b85731a1-23e2-4bcf-b422-83f325a4987a", "output": "9abdba70-bebd-4007-8b19-6021027950bd", "target": "88f91b08-fcda-447f-87b7-3dbd48f82156", "input": "2e578cda-7f13-450e-af4a-0039beca0461"}, {"source": "576b694b-df91-473a-ad5f-1c0c0847cc0a", "output": "1f1502a1-eaee-4a3f-b202-96945a75f82a", "target": "0648e6f2-5aba-4b77-a216-f6d9cc3e3568", "input": "86c4dda7-b8f9-44ff-8493-72bb7e27389b"}, {"source": "576b694b-df91-473a-ad5f-1c0c0847cc0a", "output": "1f1502a1-eaee-4a3f-b202-96945a75f82a", "target": "0648e6f2-5aba-4b77-a216-f6d9cc3e3568", "input": "4e40e68d-701b-44a5-8e14-f4076c1d8ecc"}, {"source": "0648e6f2-5aba-4b77-a216-f6d9cc3e3568", "output": "5ebce820-1a1d-435a-b99c-a13b22e17f87", "target": "98223500-669b-4c5d-94fc-fadc650ef255", "input": "ea8c443c-6288-48ad-9ec5-dd3608040f72"}, {"source": "88f91b08-fcda-447f-87b7-3dbd48f82156", "output": "69810e37-d567-45ee-b71d-36e0ab3523d6", "target": "eedc53da-d9b3-4ebd-841e-d660df7f217d", "input": "b60bf93b-c2b0-452b-8820-b2165879688a"}, {"source": "88f91b08-fcda-447f-87b7-3dbd48f82156", "output": "69810e37-d567-45ee-b71d-36e0ab3523d6", "target": "eedc53da-d9b3-4ebd-841e-d660df7f217d", "input": "dfb4acdc-65f1-444d-af76-b27bd3fb4e9c"}, {"source": "eedc53da-d9b3-4ebd-841e-d660df7f217d", "output": "4a8c7eeb-d45e-488c-92d5-5b99f5d9adbb", "target": "98223500-669b-4c5d-94fc-fadc650ef255", "input": "772447f2-7b00-4fd0-97b8-8c86fa3bc4db"}, {"source": "09f3cb26-f34a-4be8-be43-43b727acd0d4", "output": "aad73985-24af-4c4c-b242-52d4d0f24a02", "target": "576b694b-df91-473a-ad5f-1c0c0847cc0a", "input": "a3522685-0f6f-40d7-bdb7-5b53021dd526"}, {"source": "143aa884-d0dc-4ccf-9d20-4e4cf10051b4", "output": "78e9f3a8-795a-44da-9d70-9d7ab9104671", "target": "033258df-888b-44c9-911d-ceb740c26495", "input": "951e88c8-2658-4fa5-b037-b004808685f8"}, {"source": "143aa884-d0dc-4ccf-9d20-4e4cf10051b4", "output": "78e9f3a8-795a-44da-9d70-9d7ab9104671", "target": "033258df-888b-44c9-911d-ceb740c26495", "input": "d3a50641-30fe-4143-a2e4-7529c5914a77"}, {"source": "033258df-888b-44c9-911d-ceb740c26495", "output": "33c26305-7031-497f-b69e-60f129587312", "target": "2c02ea5e-7d2c-4145-99fd-142f9db92a78", "input": "ad90d2f8-6f69-4c45-a961-ce934c453f25"}, {"source": "143aa884-d0dc-4ccf-9d20-4e4cf10051b4", "output": "78e9f3a8-795a-44da-9d70-9d7ab9104671", "target": "917f008d-e78e-43c1-bb99-1312d01dbb89", "input": "e5492cb7-4a58-45f0-b564-a7c4d649803e"}, {"source": "143aa884-d0dc-4ccf-9d20-4e4cf10051b4", "output": "78e9f3a8-795a-44da-9d70-9d7ab9104671", "target": "917f008d-e78e-43c1-bb99-1312d01dbb89", "input": "88c176ac-ebd6-4b06-a6dc-2fc0883d2b37"}, {"source": "917f008d-e78e-43c1-bb99-1312d01dbb89", "output": "11af6560-9c22-4945-9c08-c6fb4e9b1cd8", "target": "656662a2-cfb0-49ec-bc3b-e2fe12ef1ffd", "input": "94c1cc6e-f040-4a03-ba24-3e6622fb9e4e"}, {"source": "2c02ea5e-7d2c-4145-99fd-142f9db92a78", "output": "01980003-1854-47f8-aa6a-032b7018ae8c", "target": "92de349c-3684-4b92-9881-a2d313128f56", "input": "d4b25ead-e49c-48da-8ea7-3a96ae4d5b28"}, {"source": "2c02ea5e-7d2c-4145-99fd-142f9db92a78", "output": "01980003-1854-47f8-aa6a-032b7018ae8c", "target": "92de349c-3684-4b92-9881-a2d313128f56", "input": "850f7f43-c491-4eb9-9aa0-92b2710e297f"}, {"source": "92de349c-3684-4b92-9881-a2d313128f56", "output": "b4556d68-55c6-4ad0-b2d5-645aeb5b9ac2", "target": "656662a2-cfb0-49ec-bc3b-e2fe12ef1ffd", "input": "edd3a77f-8264-4617-a397-a58ed41572fd"}, {"source": "98223500-669b-4c5d-94fc-fadc650ef255", "output": "ff05c34f-7691-462f-bc01-c3f6dd6aa4d1", "target": "143aa884-d0dc-4ccf-9d20-4e4cf10051b4", "input": "a669073f-d475-4245-b12f-436102adaf90"}, {"source": "12ed4032-30c6-4186-8967-5c8713fc49a2", "output": "c81a3829-8291-48d1-88e1-5fd0fca73409", "target": "021f0b30-f2b3-4df6-8b53-4f309c1518c0", "input": "ed4b2fc3-e531-49ec-9817-5ebdffed06d2"}, {"source": "12ed4032-30c6-4186-8967-5c8713fc49a2", "output": "c81a3829-8291-48d1-88e1-5fd0fca73409", "target": "021f0b30-f2b3-4df6-8b53-4f309c1518c0", "input": "e5ceba5a-d883-40a9-947e-d198458723c8"}, {"source": "021f0b30-f2b3-4df6-8b53-4f309c1518c0", "output": "c0a845b3-1b70-41e7-92de-e6ad3f72f403", "target": "4bcd0d77-95d7-45a7-833e-4d14c9e9b14d", "input": "88247aa4-594f-4f69-afe2-3c450050866c"}, {"source": "12ed4032-30c6-4186-8967-5c8713fc49a2", "output": "c81a3829-8291-48d1-88e1-5fd0fca73409", "target": "68f77ae4-89e8-4f32-ab03-47828399dcc5", "input": "100aacd2-e354-4ff5-beb0-680017882355"}, {"source": "12ed4032-30c6-4186-8967-5c8713fc49a2", "output": "c81a3829-8291-48d1-88e1-5fd0fca73409", "target": "68f77ae4-89e8-4f32-ab03-47828399dcc5", "input": "86a9b7f3-2a2d-4462-8f41-9fd6886d4162"}, {"source": "68f77ae4-89e8-4f32-ab03-47828399dcc5", "output": "f90224bf-1b61-4ed3-b43d-2c594727af7c", "target": "9b5e1cb8-37cf-4e08-8bc8-dd1471734a2b", "input": "d8436045-bb39-46a0-87fc-92e59f29018e"}, {"source": "4bcd0d77-95d7-45a7-833e-4d14c9e9b14d", "output": "59eb68f6-0300-481d-bd0d-a950b9487f9e", "target": "8ecae6df-d92b-4acb-96ec-085ac8acaa7d", "input": "a856bd0a-55f0-4b88-825b-dc30fb94a2f1"}, {"source": "4bcd0d77-95d7-45a7-833e-4d14c9e9b14d", "output": "59eb68f6-0300-481d-bd0d-a950b9487f9e", "target": "8ecae6df-d92b-4acb-96ec-085ac8acaa7d", "input": "3452a00e-f936-4b15-9d6f-7338c0c6fa37"}, {"source": "8ecae6df-d92b-4acb-96ec-085ac8acaa7d", "output": "55b8bb63-5f28-44aa-bbb8-ee5c4803a1ec", "target": "9b5e1cb8-37cf-4e08-8bc8-dd1471734a2b", "input": "94883d38-201d-458a-ada5-88549e37358a"}, {"source": "656662a2-cfb0-49ec-bc3b-e2fe12ef1ffd", "output": "efdf8aa5-21d4-4dcc-900f-97320b3408f0", "target": "12ed4032-30c6-4186-8967-5c8713fc49a2", "input": "3fd4ffaa-257b-40f3-ba70-db1eb3299659"}, {"source": "29937c7d-1f62-421c-a095-4fdb52b4785f", "output": "72c19f03-4247-4983-8831-47e56705e0b6", "target": "b27cd17b-1a19-468f-a2eb-ff739c43750f", "input": "a116336b-56e9-4f72-810a-234281122e87"}, {"source": "29937c7d-1f62-421c-a095-4fdb52b4785f", "output": "72c19f03-4247-4983-8831-47e56705e0b6", "target": "b27cd17b-1a19-468f-a2eb-ff739c43750f", "input": "3fa8a067-e99c-448b-aa4c-93470dcfb6b9"}, {"source": "b27cd17b-1a19-468f-a2eb-ff739c43750f", "output": "184f9a4c-df89-4a59-9aef-54d7eab5b8e9", "target": "26d43087-1d6b-4846-92c2-c4b89da51d61", "input": "122c0f7b-9485-4753-ac5d-23d1a10e043a"}, {"source": "29937c7d-1f62-421c-a095-4fdb52b4785f", "output": "72c19f03-4247-4983-8831-47e56705e0b6", "target": "6a1ca07b-6562-4a05-b9a6-c68306ae2127", "input": "18c13d2d-49d7-424c-b662-43e2b84f4f84"}, {"source": "29937c7d-1f62-421c-a095-4fdb52b4785f", "output": "72c19f03-4247-4983-8831-47e56705e0b6", "target": "6a1ca07b-6562-4a05-b9a6-c68306ae2127", "input": "4628acf4-a12d-41c4-985f-e0fb225be9cc"}, {"source": "6a1ca07b-6562-4a05-b9a6-c68306ae2127", "output": "379e830c-f2a3-4b19-b9fe-34ca37a41ee7", "target": "8db92058-8c4c-471a-92cf-2747f21514f5", "input": "b3cd34ba-580d-42b4-84f8-1d94e8096a77"}, {"source": "26d43087-1d6b-4846-92c2-c4b89da51d61", "output": "4993d52d-5a44-4282-a278-4594014e53ba", "target": "5f70a248-2fd9-40de-8555-2f37b9601e98", "input": "156421d0-d30f-4974-896b-46f7021778b0"}, {"source": "26d43087-1d6b-4846-92c2-c4b89da51d61", "output": "4993d52d-5a44-4282-a278-4594014e53ba", "target": "5f70a248-2fd9-40de-8555-2f37b9601e98", "input": "e2a8e4f8-a031-47e5-9255-776478051af3"}, {"source": "5f70a248-2fd9-40de-8555-2f37b9601e98", "output": "8c8cc94e-7099-44d2-9610-f903dcfc9160", "target": "8db92058-8c4c-471a-92cf-2747f21514f5", "input": "7a405682-d64c-4c14-b088-79cb9fc966f7"}, {"source": "9b5e1cb8-37cf-4e08-8bc8-dd1471734a2b", "output": "b45fc373-a828-446d-a2c8-a65f3d9a03e6", "target": "29937c7d-1f62-421c-a095-4fdb52b4785f", "input": "8612c580-79a0-4fd5-8578-3fed1b05e9e5"}, {"source": "2e4f3960-392e-47b9-86a6-4fdbd7448d11", "output": "390b5aec-cf14-4cf3-85c7-cc0f2921f897", "target": "b55b7d15-961e-4810-b80b-69b72cabf509", "input": "c9b224d9-3147-4727-9611-f226ebdf6b79"}, {"source": "55d53866-e288-4ec0-bc3a-da514cc22c01", "output": "4397667c-7ccf-4ff2-9946-a8b5bb827801", "target": "f8477cb1-45c7-42fb-8eb1-bb6c2c7ac88c", "input": "0777cae7-372e-4ab1-8a21-d3f07118caad"}], "bendpoints": "[{\"source\": \"3bae34aa-4ba9-4949-bcf8-3ff96e40d721\", \"target\": \"f1e2ff75-a53f-4ba5-a691-a0c5ff6fddbc\", \"coordinates\": \"310:530\"}, {\"source\": \"fb60ac34-4b01-4e89-ab11-aff444ebdeb0\", \"target\": \"c3da5267-bf98-46b1-ab07-660c35b2619a\", \"coordinates\": \"530:350\"}, {\"source\": \"8db92058-8c4c-471a-92cf-2747f21514f5\", \"target\": \"96a2c156-b4ca-420b-be5f-d71e84846fdc\", \"coordinates\": \"530:1965\"}, {\"source\": \"1b05b60c-3e9b-4642-b389-75ab9c36b312\", \"target\": \"09f3cb26-f34a-4be8-be43-43b727acd0d4\", \"coordinates\": \"860:750\"}, {\"source\": \"3bae34aa-4ba9-4949-bcf8-3ff96e40d721\", \"target\": \"2847ccab-6410-4549-8636-26e8ff457953\", \"coordinates\": \"805:530\"}, {\"source\": \"eedc53da-d9b3-4ebd-841e-d660df7f217d\", \"target\": \"98223500-669b-4c5d-94fc-fadc650ef255\", \"coordinates\": \"1160:1030\"}, {\"source\": \"09f3cb26-f34a-4be8-be43-43b727acd0d4\", \"target\": \"576b694b-df91-473a-ad5f-1c0c0847cc0a\", \"coordinates\": \"1105:845\"}, {\"source\": \"92de349c-3684-4b92-9881-a2d313128f56\", \"target\": \"656662a2-cfb0-49ec-bc3b-e2fe12ef1ffd\", \"coordinates\": \"1460:1310\"}, {\"source\": \"98223500-669b-4c5d-94fc-fadc650ef255\", \"target\": \"143aa884-d0dc-4ccf-9d20-4e4cf10051b4\", \"coordinates\": \"1405:1125\"}, {\"source\": \"8ecae6df-d92b-4acb-96ec-085ac8acaa7d\", \"target\": \"9b5e1cb8-37cf-4e08-8bc8-dd1471734a2b\", \"coordinates\": \"1760:1590\"}, {\"source\": \"656662a2-cfb0-49ec-bc3b-e2fe12ef1ffd\", \"target\": \"12ed4032-30c6-4186-8967-5c8713fc49a2\", \"coordinates\": \"1705:1405\"}, {\"source\": \"5f70a248-2fd9-40de-8555-2f37b9601e98\", \"target\": \"8db92058-8c4c-471a-92cf-2747f21514f5\", \"coordinates\": \"2060:1870\"}, {\"source\": \"9b5e1cb8-37cf-4e08-8bc8-dd1471734a2b\", \"target\": \"29937c7d-1f62-421c-a095-4fdb52b4785f\", \"coordinates\": \"2005:1685\"}, {\"source\": \"2e4f3960-392e-47b9-86a6-4fdbd7448d11\", \"target\": \"b55b7d15-961e-4810-b80b-69b72cabf509\", \"coordinates\": \"310:120\"}]", "labels": "[{\"identifier\": \"cd3d43f4-2114-45f1-aa26-5c11fdeb8a09\", \"headerText\": \"\", \"text\": \"Optimizer Loop\", \"location\": \"200:200\", \"size\": \"1940:1840\", \"alpha\": \"180\", \"colorHeader\": \"0:0:0\", \"colorText\": \"0:0:0\", \"colorBackground\": \"192:192:192\", \"labelPosition\": \"TOPRIGHT\", \"textAlignmentType\": \"LEFT\", \"headerAlignmentType\": \"CENTER\", \"border\": \"false\", \"headerSize\": \"14\", \"textSize\": \"10\", \"zIndex\": 0}, {\"identifier\": \"b5cc51ca-a03e-4363-bd3d-ffbf75223d1e\", \"headerText\": \"\", \"text\": \"Converger Loop\", \"location\": \"420:420\", \"size\": \"1720:1620\", \"alpha\": \"180\", \"colorHeader\": \"0:0:0\", \"colorText\": \"0:0:0\", \"colorBackground\": \"0:255:255\", \"labelPosition\": \"TOPRIGHT\", \"textAlignmentType\": \"LEFT\", \"headerAlignmentType\": \"CENTER\", \"border\": \"false\", \"headerSize\": \"14\", \"textSize\": \"10\", \"zIndex\": 0}]"}